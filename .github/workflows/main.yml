# This is a basic workflow to help you get started with Actions

name: Packaging

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-linux:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install scons
        run: pip install scons
      - name: Building the linux binary
        run: scons platform=linux target=template_release
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: demo/bin
          name: linux_bin
  
  build-windows:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install wheel and requests
        run: pip install scons
      - name: Building the windows binary
        run: scons platform=windows target=template_release
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: demo/bin
          name: windows_bin

  build-macos-intel:
    # The type of runner that the job will run on
    runs-on: macos-13

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install scons
        run: pip install scons
      - name: Building the macos intel binary
        run: scons platform=macos arch=x86_64 target=template_release
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: demo/bin
          name: macos_intel_bin
  
  build-macos-arm:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install scons
        run: pip install scons
      - name: Building the macos arm binary
        run: scons platform=macos arch=arm64 target=template_release
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: demo/bin
          name: macos_arm_bin

  package:
    runs-on: macos-latest
    needs: [build-windows, build-linux, build-macos-intel, build-macos-arm]
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: windows_bin
    - uses: actions/download-artifact@v4
      with:
        name: linux_bin
    - uses: actions/download-artifact@v4
      with:
        name: macos_intel_bin
    - uses: actions/download-artifact@v4
      with:
        name: macos_arm_bin
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11' 
    #- name: Move artifacts to dist directory
    #  run: mkdir deps/dist && mv `ls *.whl` deps/dist
    - name: Make universal mac binary
      run: > 
          lipo -create libfracture.macos.template_release.framework/libfracture.macos.template_release.x86_64 
           libfracture.macos.template_release.framework/libfracture.macos.template_release.arm64 
           -output libfracture.macos.template_release.framework/libfracture.macos.template_release.universal
    - name: Zipping the repo without git history
      run: cd .. && zip -r godot_fracture.zip .
    - name: Upload zip as draft release
      id: upload
      env:
        GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}
      run: python .github/workflows/release.py --path $GITHUB_WORKSPACE/.. --files godot_fracture.zip --version 0.0.1
 
